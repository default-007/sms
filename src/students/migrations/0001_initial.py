# Generated by Django 5.2.1 on 2025-05-19 18:47

import uuid

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("courses", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Parent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("occupation", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "annual_income",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                ("education", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "relation_with_student",
                    models.CharField(
                        choices=[
                            ("Father", "Father"),
                            ("Mother", "Mother"),
                            ("Guardian", "Guardian"),
                            ("Grandparent", "Grandparent"),
                            ("Uncle", "Uncle"),
                            ("Aunt", "Aunt"),
                            ("Other", "Other"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                ("workplace", models.CharField(blank=True, max_length=200, null=True)),
                ("work_address", models.TextField(blank=True, null=True)),
                (
                    "work_phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                ("emergency_contact", models.BooleanField(db_index=True, default=True)),
                (
                    "photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="parent_photos/%Y/%m/"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_parents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parent_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["user__first_name", "user__last_name"],
                "permissions": [
                    ("view_parent_details", "Can view detailed parent information"),
                    ("export_parent_data", "Can export parent data"),
                    ("bulk_import_parents", "Can bulk import parents"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "admission_number",
                    models.CharField(
                        db_index=True,
                        max_length=20,
                        unique=True,
                        validators=[django.core.validators.MinLengthValidator(3)],
                    ),
                ),
                ("admission_date", models.DateField(db_index=True)),
                (
                    "roll_number",
                    models.CharField(
                        blank=True, db_index=True, max_length=20, null=True
                    ),
                ),
                (
                    "blood_group",
                    models.CharField(
                        choices=[
                            ("A+", "A+"),
                            ("A-", "A-"),
                            ("B+", "B+"),
                            ("B-", "B-"),
                            ("AB+", "AB+"),
                            ("AB-", "AB-"),
                            ("O+", "O+"),
                            ("O-", "O-"),
                            ("Unknown", "Unknown"),
                        ],
                        db_index=True,
                        default="Unknown",
                        max_length=10,
                    ),
                ),
                ("medical_conditions", models.TextField(blank=True, null=True)),
                ("emergency_contact_name", models.CharField(max_length=100)),
                (
                    "emergency_contact_number",
                    models.CharField(
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                (
                    "previous_school",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Active", "Active"),
                            ("Inactive", "Inactive"),
                            ("Graduated", "Graduated"),
                            ("Suspended", "Suspended"),
                            ("Expelled", "Expelled"),
                            ("Withdrawn", "Withdrawn"),
                        ],
                        db_index=True,
                        default="Active",
                        max_length=20,
                    ),
                ),
                (
                    "registration_number",
                    models.CharField(
                        blank=True, db_index=True, max_length=30, null=True, unique=True
                    ),
                ),
                ("nationality", models.CharField(blank=True, max_length=50, null=True)),
                ("religion", models.CharField(blank=True, max_length=50, null=True)),
                ("address", models.TextField(blank=True, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("state", models.CharField(blank=True, max_length=100, null=True)),
                ("postal_code", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "country",
                    models.CharField(
                        blank=True, default="India", max_length=100, null=True
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="student_photos/%Y/%m/"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_students",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "current_class",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="students",
                        to="courses.class",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["admission_number"],
                "permissions": [
                    ("view_student_details", "Can view detailed student information"),
                    ("export_student_data", "Can export student data"),
                    ("promote_student", "Can promote student to next class"),
                    ("graduate_student", "Can mark student as graduated"),
                    ("generate_student_id", "Can generate student ID card"),
                    ("bulk_import_students", "Can bulk import students"),
                ],
            },
        ),
        migrations.CreateModel(
            name="StudentParentRelation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "is_primary_contact",
                    models.BooleanField(db_index=True, default=False),
                ),
                ("can_pickup", models.BooleanField(default=True)),
                (
                    "emergency_contact_priority",
                    models.PositiveSmallIntegerField(default=1),
                ),
                ("financial_responsibility", models.BooleanField(default=False)),
                ("access_to_grades", models.BooleanField(default=True)),
                ("access_to_attendance", models.BooleanField(default=True)),
                ("access_to_financial_info", models.BooleanField(default=False)),
                ("receive_sms", models.BooleanField(default=True)),
                ("receive_email", models.BooleanField(default=True)),
                ("receive_push_notifications", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_relations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parent_student_relations",
                        to="students.parent",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_parent_relations",
                        to="students.student",
                    ),
                ),
            ],
            options={
                "ordering": ["emergency_contact_priority"],
            },
        ),
        migrations.AddIndex(
            model_name="parent",
            index=models.Index(
                fields=["relation_with_student", "emergency_contact"],
                name="students_pa_relatio_3a0a52_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="parent",
            index=models.Index(
                fields=["user", "relation_with_student"],
                name="students_pa_user_id_18eacc_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="student",
            index=models.Index(
                fields=["admission_date", "status"],
                name="students_st_admissi_694d48_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="student",
            index=models.Index(
                fields=["current_class", "status"],
                name="students_st_current_96d1af_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="student",
            index=models.Index(
                fields=["user", "status"], name="students_st_user_id_362ff8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="studentparentrelation",
            index=models.Index(
                fields=["student", "is_primary_contact"],
                name="students_st_student_d3bd5c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="studentparentrelation",
            index=models.Index(
                fields=["parent", "is_primary_contact"],
                name="students_st_parent__5e4e5b_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="studentparentrelation",
            unique_together={("student", "parent")},
        ),
    ]
