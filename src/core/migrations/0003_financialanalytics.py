# Generated by Django 5.2.1 on 2025-06-10 18:46

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('academics', '0003_initial'),
        ('core', '0002_initial'),
        ('finance', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FinancialAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_expected_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_collected_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_outstanding', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_advance_payments', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('collection_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('on_time_collection_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('total_students', models.PositiveIntegerField(default=0)),
                ('students_paid_full', models.PositiveIntegerField(default=0)),
                ('students_paid_partial', models.PositiveIntegerField(default=0)),
                ('students_with_outstanding', models.PositiveIntegerField(default=0)),
                ('students_with_overdue', models.PositiveIntegerField(default=0)),
                ('total_scholarships_awarded', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('scholarship_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('revenue_growth', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('collection_trend', models.CharField(blank=True, choices=[('improving', 'Improving'), ('declining', 'Declining'), ('stable', 'Stable')], max_length=20, null=True)),
                ('month', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('year', models.PositiveIntegerField(blank=True, null=True)),
                ('calculated_at', models.DateTimeField(auto_now=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics.academicyear')),
                ('fee_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fee_category_analytics', to='finance.feecategory')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='academics.grade')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='academics.section')),
                ('term', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='academics.term')),
            ],
            options={
                'ordering': ['-academic_year', '-term', 'section', 'grade'],
                'indexes': [models.Index(fields=['academic_year', 'term'], name='core_financ_academi_811698_idx'), models.Index(fields=['section', 'grade'], name='core_financ_section_277ad5_idx'), models.Index(fields=['collection_rate'], name='core_financ_collect_6c1f08_idx'), models.Index(fields=['calculated_at'], name='core_financ_calcula_373433_idx')],
                'unique_together': {('academic_year', 'term', 'section', 'grade', 'fee_category', 'month', 'year')},
            },
        ),
    ]
