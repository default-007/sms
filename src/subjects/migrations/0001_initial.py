# Generated by Django 5.2.1 on 2025-05-29 14:07

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academics', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Syllabus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text="Title for this term's syllabus", max_length=300, verbose_name='Syllabus Title')),
                ('description', models.TextField(blank=True, help_text='Overview of the syllabus content', null=True, verbose_name='Description')),
                ('content', models.JSONField(default=dict, help_text='Structured content including topics, subtopics, and materials', verbose_name='Syllabus Content')),
                ('learning_objectives', models.JSONField(default=list, help_text='List of learning objectives for this syllabus', verbose_name='Learning Objectives')),
                ('completion_percentage', models.FloatField(default=0.0, help_text='Percentage of syllabus completed', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Completion Percentage')),
                ('estimated_duration_hours', models.PositiveIntegerField(default=0, help_text='Estimated time to complete this syllabus', verbose_name='Estimated Duration (Hours)')),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], default='intermediate', max_length=20, verbose_name='Difficulty Level')),
                ('prerequisites', models.JSONField(default=list, help_text='List of prerequisite subjects or topics', verbose_name='Prerequisites')),
                ('assessment_methods', models.JSONField(default=list, help_text='Methods used to assess student understanding', verbose_name='Assessment Methods')),
                ('resources', models.JSONField(default=dict, help_text='Books, materials, and other resources', verbose_name='Resources')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Syllabus',
                'verbose_name_plural': 'Syllabi',
                'ordering': ['academic_year', 'term', 'subject__name'],
            },
        ),
        migrations.CreateModel(
            name='TopicProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_name', models.CharField(max_length=300, verbose_name='Topic Name')),
                ('topic_index', models.PositiveIntegerField(help_text='Position of topic in the syllabus', verbose_name='Topic Index')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Is Completed')),
                ('completion_date', models.DateField(blank=True, null=True, verbose_name='Completion Date')),
                ('hours_taught', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Hours Taught')),
                ('teaching_method', models.CharField(blank=True, help_text='Method used to teach this topic', max_length=100, verbose_name='Teaching Method')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about teaching this topic', verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Topic Progress',
                'verbose_name_plural': 'Topic Progress',
                'ordering': ['syllabus', 'topic_index'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Subject Name')),
                ('code', models.CharField(help_text='Unique identifier for the subject (e.g., MATH101, ENG201)', max_length=20, unique=True, verbose_name='Subject Code')),
                ('description', models.TextField(blank=True, help_text='Detailed description of the subject', null=True, verbose_name='Description')),
                ('credit_hours', models.PositiveIntegerField(default=1, help_text='Number of credit hours for this subject', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Credit Hours')),
                ('is_elective', models.BooleanField(default=False, help_text='Whether this subject is elective or mandatory', verbose_name='Is Elective')),
                ('grade_level', models.JSONField(default=list, help_text='List of grade IDs that can take this subject', verbose_name='Grade Levels')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this subject is currently active', verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='academics.department', verbose_name='Department')),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
                'ordering': ['department__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SubjectAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_primary_teacher', models.BooleanField(default=True, help_text='Whether this teacher is the primary instructor for this subject', verbose_name='Is Primary Teacher')),
                ('assigned_date', models.DateField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_assignments', to='academics.academicyear', verbose_name='Academic Year')),
                ('assigned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subject_assignments_made', to=settings.AUTH_USER_MODEL, verbose_name='Assigned By')),
                ('class_assigned', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_assignments', to='academics.class', verbose_name='Class')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_assignments', to='subjects.subject', verbose_name='Subject')),
            ],
            options={
                'verbose_name': 'Subject Assignment',
                'verbose_name_plural': 'Subject Assignments',
                'ordering': ['academic_year', 'term', 'class_assigned', 'subject'],
            },
        ),
    ]
